aws sts assume-role --role-arn arn:aws:iam::123456789012:role/role-name --role-session-name "MySession" --profile myprofile

# Assume the IAM role and store the output in a variable
assume_role_output=$(aws sts assume-role --role-arn arn:aws:iam::ACCOUNT_ID:role/ROLE_NAME --role-session-name SESSION_NAME)

# Extract the temporary credentials from the assume role output
export AWS_ACCESS_KEY_ID=$(echo "$assume_role_output" | jq -r .Credentials.AccessKeyId)
export AWS_SECRET_ACCESS_KEY=$(echo "$assume_role_output" | jq -r .Credentials.SecretAccessKey)
export AWS_SESSION_TOKEN=$(echo "$assume_role_output" | jq -r .Credentials.SessionToken)

# Retrieve the secret using the assumed role credentials
aws secretsmanager get-secret-value --secret-id SECRET_ID

# Retrieve the secret value from AWS Secrets Manager
secret_output=$(aws secretsmanager get-secret-value --secret-id YOUR_SECRET_ID)

# Parse the JSON output to extract the password value
password=$(echo "$secret_output" | jq -r '.SecretString | fromjson | .password')

# Print the password value
echo "$password"

